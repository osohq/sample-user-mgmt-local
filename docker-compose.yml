services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 1s
      timeout: 2s
      retries: 10

  # This provides an example of using Oso's reconcile CLI feature in Docker
  # Compose. Find more information at
  # https://www.osohq.com/docs/authorization-data/centralized/manage-centralized-authz-data/sync-data#sync-facts-in-production
  # The reconcile feature is not meant to be used with Oso developer accounts,
  # so is commented out.
  oso_reconcile:
    build:
      context: .
      dockerfile: Dockerfile.oso_reconcile
    platform: linux/arm64
    container_name: oso_reconcile
    environment:
      - OSO_AUTH=${OSO_CLOUD_API_KEY}
      - OSO_URL=${OSO_URL}
    depends_on:
      db:
        condition: service_healthy

  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile.app
      target: builder
    restart: always
    command: yarn dev
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    depends_on:
      # db:
      #   condition: service_healthy
      - oso_reconcile

volumes:
  pgdata:
    driver: local
